#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t counting_semaphore;

void *thread_function(void *arg)
{

    sem_wait(&counting_semaphore);

    printf("Thread %d is in the critical section.\n", arg);

    sem_post(&counting_semaphore);
    printf("Thread %d exited\n", arg);
    return NULL;
}

int main()
{
    printf("21BAI1472\n");
    pthread_t threads[2];

    sem_init(&counting_semaphore, 0, 3);

    for (int i = 0; i < 2; i++)
    {
        pthread_create(&threads[i], NULL, thread_function, (void *)(long)i);
    }

    for (int i = 0; i < 2; i++)
    {
        pthread_join(threads[i], NULL);
    }

    sem_destroy(&counting_semaphore);

    return 0;
}

