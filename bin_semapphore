#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t binary_semaphore;

void *thread_function(void *arg)
{
    sem_wait(&binary_semaphore);
    printf("Thread %d is in the critical section.\n", arg);
    sem_post(&binary_semaphore);
    printf("Thread %d exited\n", arg);
    return NULL;
}

int main()
{
    printf("21BAI1472\n");
    pthread_t thread1, thread2;

    sem_init(&binary_semaphore, 0, 1);

    pthread_create(&thread1, NULL, thread_function, (void *)1);
    pthread_create(&thread2, NULL, thread_function, (void *)2);

    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);

    sem_destroy(&binary_semaphore);

    return 0;
}

